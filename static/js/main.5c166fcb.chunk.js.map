{"version":3,"sources":["getUserById.ts","api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","components/TodoForm/TodoForm.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["getUserById","userId","users","find","id","undefined","name","username","email","UserInfo","user","className","href","TodoInfo","todo","classNames","completed","title","TodoList","preparedTodos","map","TodoForm","onAddTodo","useState","setTitle","titleError","setTitleError","option","setOption","optionError","setOptionError","action","method","onSubmit","event","preventDefault","newTodo","Math","floor","random","htmlFor","type","placeholder","value","onChange","target","disabled","usersFromServer","App","todos","setTodos","prevTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5c166fcb.chunk.js","sourcesContent":["import { User } from './types/User';\n\nexport const getUserById = (userId: number, users: User[]) => {\n  return users.find(({ id }) => id === userId) || undefined;\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { FC } from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={user.email}>\n    {user.name}\n  </a>\n);\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: FC<Props> = ({ todo }) => (\n  <article\n    data-id={todo.id}\n    className={classNames('TodoInfo', {\n      'TodoInfo--completed': todo.completed,\n    })}\n  >\n    <h2 className=\"TodoInfo__title\">\n      {todo.title}\n    </h2>\n\n    {todo.user && (\n      <UserInfo user={todo.user} />\n    )}\n  </article>\n);\n","import { FC } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  preparedTodos: Todo[],\n};\n\nexport const TodoList: FC<Props> = ({ preparedTodos }) => (\n  <section className=\"TodoList\">\n    {preparedTodos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","import {\n  ChangeEvent,\n  FC,\n  FormEvent,\n  useState,\n} from 'react';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\nimport { getUserById } from '../../getUserById';\n\ntype Props = {\n  users: User[],\n  onAddTodo: (newTodo: Todo) => void,\n};\n\nexport const TodoForm: FC<Props> = ({ users, onAddTodo }) => {\n  const [title, setTitle] = useState<string>('');\n  const [titleError, setTitleError] = useState<boolean>(false);\n  const [option, setOption] = useState<number>(0);\n  const [optionError, setOptionError] = useState<boolean>(false);\n\n  const resetForm = () => {\n    setTitle('');\n    setOption(0);\n    setTitleError(false);\n    setOptionError(false);\n  };\n\n  const onSubmit = (event: FormEvent) => {\n    event.preventDefault();\n\n    if (title === '') {\n      setTitleError(true);\n    }\n\n    if (option === 0) {\n      setOptionError(true);\n    }\n\n    if (!title || !option) {\n      return;\n    }\n\n    const newTodo: Todo = {\n      id: Math.floor(Math.random() * 1000),\n      title,\n      completed: false,\n      userId: option,\n      user: getUserById(option, users),\n    };\n\n    onAddTodo(newTodo);\n    resetForm();\n  };\n\n  const handleTitle = (event: ChangeEvent<HTMLInputElement>) => {\n    if (titleError === true) {\n      setTitleError(false);\n    }\n\n    setTitle(event.target.value);\n  };\n\n  const handleSelect = (event: ChangeEvent<HTMLSelectElement>) => {\n    if (optionError === true) {\n      setOptionError(false);\n    }\n\n    setOption(+event.target.value);\n  };\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={onSubmit}\n    >\n      <div className=\"field\">\n        <label htmlFor=\"title\">Title: </label>\n        <input\n          type=\"text\"\n          data-cy=\"titleInput\"\n          id=\"title\"\n          placeholder=\"Enter a title\"\n          value={title}\n          onChange={handleTitle}\n        />\n        {titleError && (\n          <span className=\"error\">Please enter a title</span>\n        )}\n      </div>\n\n      <div className=\"field\">\n        <label htmlFor=\"user\">User: </label>\n        <select\n          data-cy=\"userSelect\"\n          id=\"user\"\n          value={option}\n          onChange={handleSelect}\n        >\n          <option value=\"0\" disabled>\n            Choose a user\n          </option>\n\n          {users.map(user => (\n            <option\n              value={user.id}\n              key={user.id}\n            >\n              {user.name}\n            </option>\n          ))}\n        </select>\n\n        {optionError && (\n          <span className=\"error\">Please choose a user</span>\n        )}\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n};\n","import { FC, useState } from 'react';\nimport './App.scss';\nimport { Todo } from './types/Todo';\nimport { getUserById } from './getUserById';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { TodoForm } from './components/TodoForm/TodoForm';\n\nconst preparedTodos: Todo[] = todosFromServer.map(todo => {\n  return {\n    ...todo,\n    user: getUserById(todo.userId, usersFromServer),\n  };\n});\n\nexport const App: FC = () => {\n  const [todos, setTodos] = useState<Todo[]>(preparedTodos);\n\n  const addNewTodo = (newTodo: Todo) => {\n    setTodos(prevTodos => [...prevTodos, newTodo]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <TodoForm users={usersFromServer} onAddTodo={addNewTodo} />\n\n      <TodoList preparedTodos={todos} />\n\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}